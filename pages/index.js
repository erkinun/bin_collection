import Head from "next/head";
import styles from "../styles/Home.module.css";
import * as cheerio from "cheerio";

function findtheDate(dateString) {
  let [day, month, year] = dateString.split("/");
  return new Date(+year, +month - 1, +day);
}

// todo how to sort by date?
function dateSorter(a, b) {
  return a - b;
}

function whichFlatIsNext(knownLastDuty, nextCollection) {
  const flats = ["A", "B", "C"];

  const lastDutyIndex = flats.indexOf(knownLastDuty.flat);
  const knownLastDutyDate = new Date(knownLastDuty.date);

  // difference between next collection date and last known date
  const diff = nextCollection - knownLastDutyDate;
  // how many weeks is that?
  let weeks = Math.ceil(diff / (1000 * 60 * 60 * 24 * 7));

  // check if next collection date is a monday or not
  const isMonday = nextCollection.getDay() === 1;
  // if not, it might be a bank holiday so the collection is on the next day
  // that means that the duty is shifted by minus 1
  if (!isMonday) {
    weeks -= 1;
  }

  const nextDutyIndex = (lastDutyIndex + weeks) % flats.length;
  return flats[nextDutyIndex];
}

export default function Home(props) {
  const knownLastDuty = { flat: "C", date: "2024-03-25" };
  const today = new Date();
  console.log({ props });
  const nextCollection = props.serviceInfos
    .map((item) => item.nextCollection)
    .map((d) => findtheDate(d, today.getFullYear()))
    .sort(dateSorter)[0]; // bit hacky

  // console.log({
  //   nextCollection,
  //   today,
  //   tomorrow: nextCollection > today,
  // });

  // so there is a problem where the next collection date might not be updated
  // like it is Tuesday and the service might still show Monday as the collection date
  if (nextCollection < today) {
    nextCollection.setDate(nextCollection.getDate() + 7);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Bin Days!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        className={styles.main}
        style={{ display: "flex", flexDirection: "column", gap: "1rem" }}
      >
        <h1 className={styles.title}>Bin collection days</h1>
        <h2>For 36 Muswell Avenue</h2>

        <section>Today is {new Date().toDateString()}</section>
        <section>
          Flat {knownLastDuty.flat} has done the bins on {knownLastDuty.date}{" "}
        </section>
        <section>
          Therefore the next duty is for Flat{" "}
          {whichFlatIsNext(knownLastDuty, nextCollection)} on{" "}
          {nextCollection.toDateString()}
        </section>

        <ul>
          {props.serviceInfos.map((item) => {
            return (
              <li key={item.serviceName}>
                <section>
                  <h3>{item.serviceName}</h3>
                  <div>Next Collection: {item.nextCollection}</div>
                  <div>Schedule: {item.schedule}</div>
                  <div>Last Collection: {item.lastCollection}</div>
                  <div>{item.collectionInfo}</div>
                </section>
              </li>
            );
          })}
        </ul>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://erkinunlu.net"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by your friendly neighbour Erkin ❤️
        </a>
      </footer>
    </div>
  );
}

export async function getServerSideProps() {
  const res = await fetch(
    // defunct url sadly, "https://my.haringey.gov.uk/getdata.aspx?RequestType=LocalInfo&ms=mapsources/MyHouse&format=JSON&group=Property%20details|Refuse%20collection%20dates&uid=100021204359"
    "https://wastecollections.haringey.gov.uk/property/100021204359"
  );

  try {
    const html = await res.text();
    const $ = cheerio.load(html);

    // Use cheerio selectors to extract information
    const title = $("head > title").text();
    const services = $("h3.service-name");
    const serviceInfos = await Promise.all(
      services.map((_, d) => {
        const serviceHeader = $(d);

        const div = serviceHeader.next();

        return {
          serviceName: serviceHeader.text().trim(),
          nextCollection: div
            .find("tbody .next-service")
            .text()
            .replace("Next collection", "")
            .trim(),
          lastCollection: div
            .find("tbody .last-service")
            .text()
            .replace("Last collection", "")
            .trim(),
          schedule: div
            .find("tbody .schedule")
            .text()
            .replace("Collection day", "")
            .trim(),
          collectionInfo: div
            .find(".collection-info .service-text")
            .text()
            .trim(),
        };
      })
    );
    return {
      props: { serviceInfos },
    };
  } catch (error) {
    console.error(error);
    return { props: {} };
  }
}
